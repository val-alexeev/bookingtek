{"version":3,"sources":["Store/Actions/actions.js","Store/Sagas/searchSaga.js","Constants/constants.js","Store/Sagas/rootSaga.js","Store/Reducers/recipesReducer.js","Store/Reducers/rootReducer.js","Store/index.js","Components/Forms/ingredientsForm/IngredientsFormStyles.js","Components/Forms/ingredientsForm/IngredientsForm.js","Components/SearchPage/SearchPage.js","Components/ResultsPage/ResultsPageStyles.js","Components/ResultsPage/ResultsPage.js","Layouts/Navigation/Navigation.js","App.js","serviceWorker.js","index.js"],"names":["TYPES","requestRecipes","ingredients","type","requestSaga","searchSaga","fetchRecipesSaga","recipesRequest","fetch","then","response","json","call","recipes","put","results","ingredient","takeEvery","rootSaga","rootSagas","all","map","saga","handleActions","state","action","recentSearches","push","combineReducers","recipesReducer","sagaMiddleware","createSagaMiddleware","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION__","compose","store","createStore","rootReducer","applyMiddleware","run","FormInputWrapper","styled","div","FormLabel","label","FormInput","input","FormButton","button","FormError","FormValid","validationSchema","Yup","shape","min","required","Error","touched","message","mapDispatchToProps","requestRecipesBound","IngredientsForm","handleSubmit","values","actions","props","history","setSubmitting","resetForm","children","this","initialValues","onSubmit","errors","handleChange","handleBlur","isSubmitting","htmlFor","name","if","placeholder","onChange","onBlur","value","disabled","PureComponent","withRouter","connect","SearchPage","previousSearches","length","index","defaultProps","ResultsPageWrapper","ResultsTitle","h4","ResultsButton","ResultsPage","searchResults","onClick","goBack","result","title","Navigation","component","exact","path","GlobalStyle","createGlobalStyle","App","Boolean","location","hostname","match","customHistory","createBrowserHistory","rootElement","document","getElementById","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"2NAAaA,EACK,iBADLA,EAEF,UAFEA,EAGQ,oBAGRC,EAAiB,SAAAC,GAC5B,MAAO,CACLC,KAAMH,EACNE,gB,WCKaE,G,WAOAC,GAfV,SAASC,EAAiBJ,GAC/B,IAEMK,EAAc,4EAFIL,EAEJ,mBCPW,EDOX,mBCTF,oCDWlB,OAAOM,MAAMD,GAAgBE,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAGlD,SAAUP,EAAV,4EACW,OADaF,EAAxB,EAAwBA,YAAxB,SACiBU,YAAKN,EAAkBJ,GADxC,OAGL,OAFMW,EADD,gBAGCC,YDHC,CACLC,QCEmBF,EDDnBV,KAAMH,ICFH,OAIL,OAJK,SAICc,YDGC,CACLE,WCJ0Bd,EDK1BC,KAAMH,ICTH,uCAOA,SAAUK,IAAV,iEACL,OADK,SACCY,YAAUjB,EAAsBI,GADjC,uCAIQ,OAACC,G,WEpBSa,GAFZC,EAAS,YAAOd,GAEd,SAAUa,IAAV,iEACb,OADa,SACPE,YAAID,EAAUE,KAAI,SAAAC,GAAI,OAAIV,YAAKU,OADxB,uC,+BCEAC,eAAa,mBAEvBvB,GAAgB,SAACwB,EAAOC,GAAR,mBAAC,eACbD,GADY,IAEfT,QAASU,EAAOV,aAJM,cAMvBf,GAA0B,SAACwB,EAAOC,GACjC,IAAMT,EAAaS,EAAOT,WACpBU,EAAc,YAAOF,EAAME,gBAIjC,OAFAA,EAAeC,KAAKX,GAEb,2BACFQ,GADL,IAEEE,sBAdoB,GAJP,CACnBA,eAAgB,KCDHE,cAAgB,CAC7Bf,QAASgB,ICGLC,EAAiBC,cAEjBC,EAAmBC,OAAOC,8BAAgCC,IAE1DC,EAAQC,YACZC,EACAH,YAAQI,YAAgBT,GAAiBE,MAG3CF,EAAeU,IAAItB,GAEJkB,I,YAAAA,I,wEChBFK,EAAmBC,IAAOC,IAAV,8IAQhBC,GAAYF,IAAOG,MAAV,sEAKTC,GAAYJ,IAAOK,MAAV,uNAaTC,GAAaN,IAAOO,OAAV,mPAaVC,GAAYR,IAAOC,IAAV,2CAITQ,GAAYT,IAAOC,IAAV,6C,QCnChBS,GAAmBC,MAAaC,MAAM,CAC1CpD,YAAamD,MACVE,IAAI,EAAG,4CACPC,SAAS,8BAGDC,GAAQ,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,QAASC,EAAc,EAAdA,QAC/B,OAAKD,EAIDC,EACK,eAAC,GAAD,UAAmBA,IAGrB,eAAC,GAAD,oBAPE,eAAC,GAAD,oBAULC,GAAqB,CACzBC,oBAAqB5D,GAGV6D,GAAb,4MACEC,aAAe,SAACC,EAAQC,GACtB,MAAyC,EAAKC,MAAtCL,EAAR,EAAQA,oBAAqBM,EAA7B,EAA6BA,QAC7BF,EAAQG,eAAc,GAEtBP,EAAoBG,EAAO9D,aAE3B+D,EAAQI,YACRJ,EAAQG,eAAc,GAEtBD,EAAQxC,KAAK,aAVjB,4CAaE,WACE,IAAQ2C,EAAaC,KAAKL,MAAlBI,SAER,OACE,eAAC,IAAD,CACEE,cAAe,CAAEtE,YAAa,IAC9BkD,iBAAkBA,GAClBqB,SAAUF,KAAKR,aAHjB,SAKG,gBACCC,EADD,EACCA,OACAU,EAFD,EAECA,OACAhB,EAHD,EAGCA,QACAiB,EAJD,EAICA,aACAC,EALD,EAKCA,WACAb,EAND,EAMCA,aACAc,EAPD,EAOCA,aAPD,OASC,eAAC,EAAD,UACE,wBAAMJ,SAAUV,EAAhB,UACE,eAAC,GAAD,CAAkBe,QAAQ,cAA1B,0BAIA,eAAC,GAAD,CACE3E,KAAK,OACL4E,KAAK,cACLC,GAAG,cACHC,YAAY,yBACZC,SAAUP,EACVQ,OAAQP,EACRQ,MAAOpB,EAAO9D,cAGhB,eAAC,GAAD,CACEwD,QAASA,EAAQxD,YACjByD,QAASe,EAAOxE,gBAGfoE,GAAY,+BAAMA,IAErB,eAAC,GAAD,CAAmBnE,KAAK,SAASkF,SAAUR,EAA3C,gCAtDd,GAAqCS,iBAiEtBC,eAAWC,YAAQ,KAAM5B,GAAd4B,CAAkC1B,KCrFtDF,GAAqB,CACzBC,oBAAqB5D,GAGVwF,GAAa,SAAC,GAAD,IAAGC,EAAH,EAAGA,iBAAH,OACxB,eAAC,GAAD,YACKA,EAAiBC,QAClB,iCACE,mDACA,8BACGD,EAAiBrE,KAAI,SAACL,EAAY4E,GAAb,OACpB,8BAAiB5E,GAAR4E,cAYrBH,GAAWI,aAAe,CACxBH,iBAAkB,IAGLF,I,SAAAA,gBA/BS,SAAAhE,GAAK,MAAK,CAChCkE,iBAAkBlE,EAAMX,QAAQa,gBAAkB,MA8BZkC,GAAzB4B,CAA6CC,ICrC/CK,GAAqBpD,IAAOC,IAAV,+HAOlBoD,GAAerD,IAAOsD,GAAV,mDAIZC,GAAgBvD,IAAOO,OAAV,qPCFbiD,GAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,cAAehC,EAAlB,EAAkBA,QAAlB,OACzB,gBAAC,GAAD,WACE,eAAC,GAAD,CAAsBiC,QAAS,kBAAMjC,EAAQkC,UAA7C,kBAIA,eAAC,GAAD,yBAEGF,EAAcR,QACf,8BACGQ,EAAc9E,KAAI,SAACiF,EAAQV,GAAT,OACjB,8BAAiBU,EAAOC,OAAfX,YAwCnBM,GAAYL,aAAe,CACzBM,cAAe,IAGFZ,I,GAAAA,eAAWC,aA3DF,SAAAhE,GAAK,MAAK,CAChC2E,cAAe3E,EAAMX,QAAQE,SAAW,MA0DhByE,CAAyBU,KC/CpCM,GAbW,WACxB,OACE,eAAC,IAAD,UACE,gBAAC,IAAD,WACE,eAAC,IAAD,CAAOC,UAAWhB,GAAYiB,OAAK,EAACC,KAAK,MACzC,eAAC,IAAD,CAAOF,UAAWhB,GAAYiB,OAAK,EAACC,KAAK,YACzC,eAAC,IAAD,CAAOF,UAAWP,GAAaQ,OAAK,EAACC,KAAK,aAC1C,eAAC,IAAD,CAAOF,UAAWhD,cCRpBmD,GAAcC,YAAH,6YAmCFC,GAPI,kBACjB,uCACE,eAACF,GAAD,IACA,eAAC,GAAD,QCxBgBG,QACW,cAA7B9E,OAAO+E,SAASC,UAEe,UAA7BhF,OAAO+E,SAASC,UAEhBhF,OAAO+E,SAASC,SAASC,MACvB,2DCPN,IAAMC,GAAgBC,cAChBC,GAAcC,SAASC,eAAe,QAE5CC,IAASC,OACP,eAAC,IAAD,CAAUrF,MAAOA,EAAjB,SACE,eAAC,IAAD,CAAQ+B,QAASgD,GAAjB,SACE,eAAC,GAAD,QAGJE,ID+GI,kBAAmBK,WACrBA,UAAUC,cAAcC,MAAMnH,MAAK,SAAAoH,GACjCA,EAAaC,kB","file":"static/js/main.f09a6dcb.chunk.js","sourcesContent":["export const TYPES = {\n  SEARCH_RECIPES: \"SEARCH_RECIPES\",\n  RECIPES: \"RECIPES\",\n  SET_RECENT_SEARCH: \"SET_RECENT_SEARCH\"\n};\n\nexport const requestRecipes = ingredients => {\n  return {\n    type: TYPES.SEARCH_RECIPES,\n    ingredients\n  };\n};\n\nexport const setRecipes = results => {\n  return {\n    results,\n    type: TYPES.RECIPES\n  };\n};\n\nexport const setRecentSearches = ingredient => {\n  return {\n    ingredient,\n    type: TYPES.SET_RECENT_SEARCH\n  };\n};\n","import { takeEvery, call, put } from \"redux-saga/effects\";\n\nimport { TYPES, setRecipes, setRecentSearches } from \"Store/Actions/actions\";\n\nimport { API_KEY, NUMBER_OF_RECIPES } from \"Constants/constants\";\n\nexport function fetchRecipesSaga(ingredients) {\n  const ingredientsList = ingredients;\n\n  const recipesRequest = `https://api.spoonacular.com/recipes/findByIngredients?ingredients=${ingredientsList}&number=${NUMBER_OF_RECIPES}&apiKey=${API_KEY}`;\n\n  return fetch(recipesRequest).then(response => response.json());\n}\n\nexport function* requestSaga({ ingredients }) {\n  const recipes = yield call(fetchRecipesSaga, ingredients);\n\n  yield put(setRecipes(recipes));\n  yield put(setRecentSearches(ingredients));\n}\n\nexport function* searchSaga() {\n  yield takeEvery(TYPES.SEARCH_RECIPES, requestSaga);\n}\n\nexport default [searchSaga];\n","export const API_KEY = `e705354394e94b2dbdffe4e3ed5b7626`;\n\nexport const NUMBER_OF_RECIPES = 4;\n","import { call, all } from \"redux-saga/effects\";\nimport searchSaga from \"./searchSaga\";\n\nexport const rootSagas = [...searchSaga];\n\nexport default function* rootSaga() {\n  yield all(rootSagas.map(saga => call(saga)));\n}\n","import { handleActions } from \"redux-actions\";\nimport { TYPES } from \"Store/Actions/actions\";\n\nconst initialState = {\n  recentSearches: []\n};\n\nexport default handleActions(\n  {\n    [TYPES.RECIPES]: (state, action) => ({\n      ...state,\n      results: action.results\n    }),\n    [TYPES.SET_RECENT_SEARCH]: (state, action) => {\n      const ingredient = action.ingredient;\n      const recentSearches = [...state.recentSearches];\n\n      recentSearches.push(ingredient);\n\n      return {\n        ...state,\n        recentSearches\n      };\n    }\n  },\n  initialState\n);\n","import { combineReducers } from \"redux\";\nimport recipesReducer from \"./recipesReducer\";\n\nexport default combineReducers({\n  recipes: recipesReducer\n});\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport createSagaMiddleware from \"redux-saga\";\n\nimport rootSaga from \"Store/Sagas/rootSaga\";\n\nimport rootReducer from \"Store/Reducers/rootReducer\";\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION__ || compose;\n\nconst store = createStore(\n  rootReducer,\n  compose(applyMiddleware(sagaMiddleware), composeEnhancers())\n);\n\nsagaMiddleware.run(rootSaga);\n\nexport default store;\n","import styled from \"styled-components\";\n\nexport const FormInputWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  margin: 20px;\n`;\n\nexport const FormLabel = styled.label`\n  font-weight: bold;\n  font-size: 16px;\n`;\n\nexport const FormInput = styled.input`\n  width: 100%;\n  padding: 12px 20px;\n  margin: 8px 0;\n  box-sizing: border-box;\n  border: 3px solid #ccc;\n  border-radius: 4px;\n\n  &::has-error {\n    border: 2px solid red;\n  }\n`;\n\nexport const FormButton = styled.button`\n  background-color: #555;\n  border: none;\n  color: white;\n  padding: 15px 32px;\n  text-align: center;\n  text-decoration: none;\n  display: flex;\n  font-size: 16px;\n  margin-top: 20px;\n  border-radius: 4px;\n`;\n\nexport const FormError = styled.div`\n  color: red;\n`;\n\nexport const FormValid = styled.div`\n  color: green;\n`;\n","import React, { PureComponent } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { withRouter } from \"react-router-dom\";\n\nimport { requestRecipes } from \"Store/Actions/actions\";\n\nimport * as Styles from \"./IngredientsFormStyles\";\n\nconst validationSchema = Yup.object().shape({\n  ingredients: Yup.string()\n    .min(3, \"ingredients must have at least 3 letters\")\n    .required(\"Must enter an ingredient\")\n});\n\nexport const Error = ({ touched, message }) => {\n  if (!touched) {\n    return <Styles.FormError>&nbsp;</Styles.FormError>;\n  }\n\n  if (message) {\n    return <Styles.FormError>{message}</Styles.FormError>;\n  }\n\n  return <Styles.FormValid>Valid</Styles.FormValid>;\n};\n\nconst mapDispatchToProps = {\n  requestRecipesBound: requestRecipes\n};\n\nexport class IngredientsForm extends PureComponent {\n  handleSubmit = (values, actions) => {\n    const { requestRecipesBound, history } = this.props;\n    actions.setSubmitting(true);\n\n    requestRecipesBound(values.ingredients);\n\n    actions.resetForm();\n    actions.setSubmitting(false);\n\n    history.push(\"/results\");\n  };\n\n  render() {\n    const { children } = this.props;\n\n    return (\n      <Formik\n        initialValues={{ ingredients: \"\" }}\n        validationSchema={validationSchema}\n        onSubmit={this.handleSubmit}\n      >\n        {({\n          values,\n          errors,\n          touched,\n          handleChange,\n          handleBlur,\n          handleSubmit,\n          isSubmitting\n        }) => (\n          <Styles.FormInputWrapper>\n            <form onSubmit={handleSubmit}>\n              <Styles.FormLabel htmlFor=\"ingredients\">\n                Ingredients:\n              </Styles.FormLabel>\n\n              <Styles.FormInput\n                type=\"text\"\n                name=\"ingredients\"\n                if=\"ingredients\"\n                placeholder=\"Enter your ingredients\"\n                onChange={handleChange}\n                onBlur={handleBlur}\n                value={values.ingredients}\n              />\n\n              <Error\n                touched={touched.ingredients}\n                message={errors.ingredients}\n              />\n\n              {!!children && <div>{children}</div>}\n\n              <Styles.FormButton type=\"submit\" disabled={isSubmitting}>\n                Search\n              </Styles.FormButton>\n            </form>\n          </Styles.FormInputWrapper>\n        )}\n      </Formik>\n    );\n  }\n}\n\nexport default withRouter(connect(null, mapDispatchToProps)(IngredientsForm));\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\n\nimport { requestRecipes } from \"Store/Actions/actions\";\n\nimport IngredientsForm from \"Components/Forms/ingredientsForm/IngredientsForm\";\n\nconst mapStateToProps = state => ({\n  previousSearches: state.recipes.recentSearches || []\n});\n\nconst mapDispatchToProps = {\n  requestRecipesBound: requestRecipes\n};\n\nexport const SearchPage = ({ previousSearches }) => (\n  <IngredientsForm>\n    {!!previousSearches.length && (\n      <div>\n        <h4>Recent Searches:</h4>\n        <ol>\n          {previousSearches.map((ingredient, index) => (\n            <li key={index}>{ingredient}</li>\n          ))}\n        </ol>\n      </div>\n    )}\n  </IngredientsForm>\n);\n\nSearchPage.propTypes = {\n  previousSearches: PropTypes.array\n};\n\nSearchPage.defaultProps = {\n  previousSearches: []\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchPage);\n","import styled from \"styled-components\";\n\nexport const ResultsPageWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const ResultsTitle = styled.h4`\n  margin-bottom: 0;\n`;\n\nexport const ResultsButton = styled.button`\n  background-color: #555;\n  border: none;\n  color: white;\n  padding: 15px 32px;\n  text-align: center;\n  text-decoration: none;\n  display: flex;\n  font-size: 16px;\n  margin-top: 20px;\n  border-radius: 4px;\n`;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\n\nimport * as Styles from \"./ResultsPageStyles\";\n\nconst mapStateToProps = state => ({\n  searchResults: state.recipes.results || []\n});\n\nexport const ResultsPage = ({ searchResults, history }) => (\n  <Styles.ResultsPageWrapper>\n    <Styles.ResultsButton onClick={() => history.goBack()}>\n      Back\n    </Styles.ResultsButton>\n\n    <Styles.ResultsTitle>Results:</Styles.ResultsTitle>\n\n    {!!searchResults.length && (\n      <ul>\n        {searchResults.map((result, index) => (\n          <li key={index}>{result.title}</li>\n        ))}\n      </ul>\n    )}\n  </Styles.ResultsPageWrapper>\n);\n\nResultsPage.propTypes = {\n  searchResults: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number,\n      title: PropTypes.string,\n      image: PropTypes.string,\n      imageType: PropTypes.string,\n      usedIngredientCount: PropTypes.number,\n      missedIngredientCount: PropTypes.number,\n      missedIngredients: PropTypes.array,\n      usedIngredients: PropTypes.arrayOf(\n        PropTypes.shape({\n          id: PropTypes.number,\n          amount: PropTypes.number,\n          unit: PropTypes.string,\n          unitLong: PropTypes.string,\n          unitShort: PropTypes.string,\n          aisle: PropTypes.string,\n          name: PropTypes.string,\n          original: PropTypes.string,\n          originalString: PropTypes.string,\n          originalName: PropTypes.string,\n          metaInformation: PropTypes.arrayOf(PropTypes.string),\n          meta: PropTypes.arrayOf(PropTypes.string),\n          image: PropTypes.string\n        })\n      ),\n      unusedIngredients: PropTypes.array,\n      likes: PropTypes.number\n    })\n  )\n};\n\nResultsPage.defaultProps = {\n  searchResults: []\n};\n\nexport default withRouter(connect(mapStateToProps)(ResultsPage));\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nimport SearchPage from \"Components/SearchPage/SearchPage\";\nimport ResultsPage from \"Components/ResultsPage/ResultsPage\";\n\nexport const Navigation = () => {\n  return (\n    <Router>\n      <Switch>\n        <Route component={SearchPage} exact path=\"/\" />\n        <Route component={SearchPage} exact path=\"/search\" />\n        <Route component={ResultsPage} exact path=\"/results\" />\n        <Route component={Error} />\n      </Switch>\n    </Router>\n  );\n};\n\nexport default Navigation;\n","import React from \"react\";\nimport { createGlobalStyle } from \"styled-components\";\n\nimport Navigation from \"Layouts/Navigation/Navigation\";\n\nconst GlobalStyle = createGlobalStyle`\n*,\n*::before,\n*::after {\n  box-sizing: border-box;\n}\n\n body {\n   margin: 0;\n   padding: 0;\n   font-family: sans-serif;\n }\n\n /* Rules for sizing material-icons */\n.material-icons.md-18 {\n  font-size: 18px;\n}\n.material-icons.md-24 {\n  font-size: 24px;\n}\n.material-icons.md-36 {\n  font-size: 36px;\n}\n.material-icons.md-48 {\n  font-size: 48px;\n}\n`;\n\nexport const App = () => (\n  <>\n    <GlobalStyle />\n    <Navigation />\n  </>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Router } from \"react-router\";\nimport { Provider } from \"react-redux\";\nimport { createBrowserHistory } from \"history\";\n\nimport store from \"Store\";\n\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nconst customHistory = createBrowserHistory();\nconst rootElement = document.getElementById(\"root\");\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router history={customHistory}>\n      <App />\n    </Router>\n  </Provider>,\n  rootElement\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}